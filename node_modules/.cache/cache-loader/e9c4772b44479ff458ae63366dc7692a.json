{"remainingRequest":"/home/samuel/Dokumente/git/wiki.musicnova.eu/node_modules/babel-loader/lib/index.js??ref--9-1!/home/samuel/Dokumente/git/wiki.musicnova.eu/node_modules/@docusaurus/theme-common/lib/utils/usePluralForm.js","dependencies":[{"path":"/home/samuel/Dokumente/git/wiki.musicnova.eu/node_modules/@docusaurus/theme-common/lib/utils/usePluralForm.js","mtime":499162500000},{"path":"/home/samuel/Dokumente/git/wiki.musicnova.eu/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/samuel/Dokumente/git/wiki.musicnova.eu/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOy8qKgogKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy4KICoKICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlCiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS4KICovdmFyIF9faW1wb3J0RGVmYXVsdD10aGlzJiZ0aGlzLl9faW1wb3J0RGVmYXVsdHx8ZnVuY3Rpb24obW9kKXtyZXR1cm4gbW9kJiZtb2QuX19lc01vZHVsZT9tb2Q6eyJkZWZhdWx0Ijptb2R9O307T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIl9fZXNNb2R1bGUiLHt2YWx1ZTp0cnVlfSk7ZXhwb3J0cy51c2VQbHVyYWxGb3JtPXZvaWQgMDtjb25zdCByZWFjdF8xPXJlcXVpcmUoInJlYWN0Iik7Y29uc3QgdXNlRG9jdXNhdXJ1c0NvbnRleHRfMT1fX2ltcG9ydERlZmF1bHQocmVxdWlyZSgiQGRvY3VzYXVydXMvdXNlRG9jdXNhdXJ1c0NvbnRleHQiKSk7Ly8gV2Ugd2FudCB0byBlbnN1cmVyIGEgc3RhYmxlIHBsdXJhbCBmb3JtIG9yZGVyIGluIGFsbCBjYXNlcwovLyBJdCBpcyBtb3JlIGNvbnZlbmllbnQgYW5kIG5hdHVyYWwgdG8gaGFuZGxlICJzbWFsbCB2YWx1ZXMiIGZpcnN0Ci8vIFNlZSBodHRwczovL3R3aXR0ZXIuY29tL3NlYmFzdGllbmxvcmJlci9zdGF0dXMvMTM2NjgyMDY2MzI2MTA3NzUxMApjb25zdCBPcmRlcmVkUGx1cmFsRm9ybXM9Wyd6ZXJvJywnb25lJywndHdvJywnZmV3JywnbWFueScsJ290aGVyJ107ZnVuY3Rpb24gc29ydFBsdXJhbEZvcm1zKHBsdXJhbEZvcm1zKXtyZXR1cm4gT3JkZXJlZFBsdXJhbEZvcm1zLmZpbHRlcihwZj0+cGx1cmFsRm9ybXMuaW5jbHVkZXMocGYpKTt9Ly8gSGFyZGNvZGVkIGVuZ2xpc2gvZmFsbGJhY2sgaW1wbGVtZW50YXRpb24KY29uc3QgRW5nbGlzaFBsdXJhbEZvcm1zPXtsb2NhbGU6J2VuJyxwbHVyYWxGb3Jtczpzb3J0UGx1cmFsRm9ybXMoWydvbmUnLCdvdGhlciddKSxzZWxlY3Q6Y291bnQ9PmNvdW50PT09MT8nb25lJzonb3RoZXInfTtmdW5jdGlvbiBjcmVhdGVMb2NhbGVQbHVyYWxGb3Jtcyhsb2NhbGUpe2NvbnN0IHBsdXJhbFJ1bGVzPW5ldyBJbnRsLlBsdXJhbFJ1bGVzKGxvY2FsZSk7cmV0dXJue2xvY2FsZSxwbHVyYWxGb3Jtczpzb3J0UGx1cmFsRm9ybXMocGx1cmFsUnVsZXMucmVzb2x2ZWRPcHRpb25zKCkucGx1cmFsQ2F0ZWdvcmllcyksc2VsZWN0OmNvdW50PT5wbHVyYWxSdWxlcy5zZWxlY3QoY291bnQpfTt9Ly8gUG9vciBtYW4ncyBQbHVyYWxTZWxlY3RvciBpbXBsZW1lbnRhdGlvbiwgdXNpbmcgYW4gZW5nbGlzaCBmYWxsYmFjay4KLy8gV2Ugd2FudCBhIGxpZ2h0d2VpZ2h0LCBmdXR1cmUtcHJvb2YgYW5kIGdvb2QtZW5vdWdoIHNvbHV0aW9uLgovLyBXZSBkb24ndCB3YW50IGEgcGVyZmVjdCBhbmQgaGVhdnkgc29sdXRpb24uCi8vCi8vIERvY3VzYXVydXMgY2xhc3NpYyB0aGVtZSBoYXMgb25seSAyIGRlZXBseSBuZXN0ZWQgbGFiZWxzIHJlcXVpcmluZyBjb21wbGV4IHBsdXJhbCBydWxlcwovLyBXZSBkb24ndCB3YW50IHRvIHVzZSBJbnRsICsgUGx1cmFsUnVsZXMgcG9seWZpbGxzICsgZnVsbCBJQ1Ugc3ludGF4IChyZWFjdC1pbnRsKSBqdXN0IGZvciB0aGF0LgovLwovLyBOb3RlczoKLy8gLSAyMDIxOiA5MislIEJyb3dzZXJzIHN1cHBvcnQgSW50bC5QbHVyYWxSdWxlcywgYW5kIHN1cHBvcnQgd2lsbCBpbmNyZWFzZSBpbiB0aGUgZnV0dXJlCi8vIC0gTm9kZUpTID49IDEzIGhhcyBmdWxsIElDVSBzdXBwb3J0IGJ5IGRlZmF1bHQKLy8gLSBJbiBjYXNlIG9mICJtaXNtYXRjaCIgYmV0d2VlbiBTU1IgYW5kIEJyb3dzZXIgSUNVIHN1cHBvcnQsIFJlYWN0IGtlZXBzIHdvcmtpbmchCmZ1bmN0aW9uIHVzZUxvY2FsZVBsdXJhbEZvcm1zKCl7Y29uc3R7aTE4bjp7Y3VycmVudExvY2FsZX19PXVzZURvY3VzYXVydXNDb250ZXh0XzEuZGVmYXVsdCgpO3JldHVybiByZWFjdF8xLnVzZU1lbW8oKCk9PntpZihJbnRsJiZJbnRsLlBsdXJhbFJ1bGVzKXt0cnl7cmV0dXJuIGNyZWF0ZUxvY2FsZVBsdXJhbEZvcm1zKGN1cnJlbnRMb2NhbGUpO31jYXRjaChlKXtjb25zb2xlLmVycm9yKGBGYWlsZWQgdG8gdXNlIEludGwuUGx1cmFsUnVsZXMgZm9yIGxvY2FsZT0ke2N1cnJlbnRMb2NhbGV9LgpEb2N1c2F1cnVzIHdpbGwgZmFsbGJhY2sgdG8gYSBkZWZhdWx0L2ZhbGxiYWNrIChFbmdsaXNoKSBJbnRsLlBsdXJhbFJ1bGVzIGltcGxlbWVudGF0aW9uLgpgKTtyZXR1cm4gRW5nbGlzaFBsdXJhbEZvcm1zO319ZWxzZXtjb25zb2xlLmVycm9yKGBJbnRsLlBsdXJhbFJ1bGVzIG5vdCBhdmFpbGFibGUhCkRvY3VzYXVydXMgd2lsbCBmYWxsYmFjayB0byBhIGRlZmF1bHQvZmFsbGJhY2sgKEVuZ2xpc2gpIEludGwuUGx1cmFsUnVsZXMgaW1wbGVtZW50YXRpb24uCiAgICAgICAgYCk7cmV0dXJuIEVuZ2xpc2hQbHVyYWxGb3Jtczt9fSxbY3VycmVudExvY2FsZV0pO31mdW5jdGlvbiBzZWxlY3RQbHVyYWxNZXNzYWdlKHBsdXJhbE1lc3NhZ2VzLGNvdW50LGxvY2FsZVBsdXJhbEZvcm1zKXtjb25zdCBzZXBhcmF0b3I9J3wnO2NvbnN0IHBhcnRzPXBsdXJhbE1lc3NhZ2VzLnNwbGl0KHNlcGFyYXRvcik7aWYocGFydHMubGVuZ3RoPT09MSl7cmV0dXJuIHBhcnRzWzBdO31lbHNle2lmKHBhcnRzLmxlbmd0aD5sb2NhbGVQbHVyYWxGb3Jtcy5wbHVyYWxGb3Jtcy5sZW5ndGgpe2NvbnNvbGUuZXJyb3IoYEZvciBsb2NhbGU9JHtsb2NhbGVQbHVyYWxGb3Jtcy5sb2NhbGV9LCBhIG1heGltdW0gb2YgJHtsb2NhbGVQbHVyYWxGb3Jtcy5wbHVyYWxGb3Jtcy5sZW5ndGh9IHBsdXJhbCBmb3JtcyBhcmUgZXhwZWN0ZWQgKCR7bG9jYWxlUGx1cmFsRm9ybXMucGx1cmFsRm9ybXN9KSwgYnV0IHRoZSBtZXNzYWdlIGNvbnRhaW5zICR7cGFydHMubGVuZ3RofSBwbHVyYWwgZm9ybXM6ICR7cGx1cmFsTWVzc2FnZXN9IGApO31jb25zdCBwbHVyYWxGb3JtPWxvY2FsZVBsdXJhbEZvcm1zLnNlbGVjdChjb3VudCk7Y29uc3QgcGx1cmFsRm9ybUluZGV4PWxvY2FsZVBsdXJhbEZvcm1zLnBsdXJhbEZvcm1zLmluZGV4T2YocGx1cmFsRm9ybSk7Ly8gSW4gY2FzZSBvZiBub3QgZW5vdWdoIHBsdXJhbCBmb3JtIG1lc3NhZ2VzLCB3ZSB0YWtlIHRoZSBsYXN0IG9uZSAob3RoZXIpIGluc3RlYWQgb2YgcmV0dXJuaW5nIHVuZGVmaW5lZApyZXR1cm4gcGFydHNbTWF0aC5taW4ocGx1cmFsRm9ybUluZGV4LHBhcnRzLmxlbmd0aC0xKV07fX1mdW5jdGlvbiB1c2VQbHVyYWxGb3JtKCl7Y29uc3QgbG9jYWxlUGx1cmFsRm9ybT11c2VMb2NhbGVQbHVyYWxGb3JtcygpO3JldHVybntzZWxlY3RNZXNzYWdlOihjb3VudCxwbHVyYWxNZXNzYWdlcyk9PntyZXR1cm4gc2VsZWN0UGx1cmFsTWVzc2FnZShwbHVyYWxNZXNzYWdlcyxjb3VudCxsb2NhbGVQbHVyYWxGb3JtKTt9fTt9ZXhwb3J0cy51c2VQbHVyYWxGb3JtPXVzZVBsdXJhbEZvcm07"},{"version":3,"sources":["/home/samuel/Dokumente/git/wiki.musicnova.eu/node_modules/@docusaurus/theme-common/lib/utils/usePluralForm.js"],"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","usePluralForm","react_1","require","useDocusaurusContext_1","OrderedPluralForms","sortPluralForms","pluralForms","filter","pf","includes","EnglishPluralForms","locale","select","count","createLocalePluralForms","pluralRules","Intl","PluralRules","resolvedOptions","pluralCategories","useLocalePluralForms","i18n","currentLocale","default","useMemo","e","console","error","selectPluralMessage","pluralMessages","localePluralForms","separator","parts","split","length","pluralForm","pluralFormIndex","indexOf","Math","min","localePluralForm","selectMessage"],"mappings":"AAAA,aACA;AACA;AACA;AACA;AACA;AACA,GACA,GAAIA,CAAAA,eAAe,CAAI,MAAQ,KAAKA,eAAd,EAAkC,SAAUC,GAAV,CAAe,CACnE,MAAQA,CAAAA,GAAG,EAAIA,GAAG,CAACC,UAAZ,CAA0BD,GAA1B,CAAgC,CAAE,UAAWA,GAAb,CAAvC,CACH,CAFD,CAGAE,MAAM,CAACC,cAAP,CAAsBC,OAAtB,CAA+B,YAA/B,CAA6C,CAAEC,KAAK,CAAE,IAAT,CAA7C,EACAD,OAAO,CAACE,aAAR,CAAwB,IAAK,EAA7B,CACA,KAAMC,CAAAA,OAAO,CAAGC,OAAO,CAAC,OAAD,CAAvB,CACA,KAAMC,CAAAA,sBAAsB,CAAGV,eAAe,CAACS,OAAO,CAAC,kCAAD,CAAR,CAA9C,CACA;AACA;AACA;AACA,KAAME,CAAAA,kBAAkB,CAAG,CACvB,MADuB,CAEvB,KAFuB,CAGvB,KAHuB,CAIvB,KAJuB,CAKvB,MALuB,CAMvB,OANuB,CAA3B,CAQA,QAASC,CAAAA,eAAT,CAAyBC,WAAzB,CAAsC,CAClC,MAAOF,CAAAA,kBAAkB,CAACG,MAAnB,CAA2BC,EAAD,EAAQF,WAAW,CAACG,QAAZ,CAAqBD,EAArB,CAAlC,CAAP,CACH,CACD;AACA,KAAME,CAAAA,kBAAkB,CAAG,CACvBC,MAAM,CAAE,IADe,CAEvBL,WAAW,CAAED,eAAe,CAAC,CAAC,KAAD,CAAQ,OAAR,CAAD,CAFL,CAGvBO,MAAM,CAAGC,KAAD,EAAYA,KAAK,GAAK,CAAV,CAAc,KAAd,CAAsB,OAHnB,CAA3B,CAKA,QAASC,CAAAA,uBAAT,CAAiCH,MAAjC,CAAyC,CACrC,KAAMI,CAAAA,WAAW,CAAG,GAAIC,CAAAA,IAAI,CAACC,WAAT,CAAqBN,MAArB,CAApB,CACA,MAAO,CACHA,MADG,CAEHL,WAAW,CAAED,eAAe,CAACU,WAAW,CAACG,eAAZ,GAA8BC,gBAA/B,CAFzB,CAGHP,MAAM,CAAGC,KAAD,EAAWE,WAAW,CAACH,MAAZ,CAAmBC,KAAnB,CAHhB,CAAP,CAKH,CACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAASO,CAAAA,oBAAT,EAAgC,CAC5B,KAAM,CAAEC,IAAI,CAAE,CAAEC,aAAF,CAAR,EAA+BnB,sBAAsB,CAACoB,OAAvB,EAArC,CACA,MAAOtB,CAAAA,OAAO,CAACuB,OAAR,CAAgB,IAAM,CACzB,GAAIR,IAAI,EAAIA,IAAI,CAACC,WAAjB,CAA8B,CAC1B,GAAI,CACA,MAAOH,CAAAA,uBAAuB,CAACQ,aAAD,CAA9B,CACH,CACD,MAAOG,CAAP,CAAU,CACNC,OAAO,CAACC,KAAR,CAAe,6CAA4CL,aAAc;AACzF;AACA,CAFgB,EAGA,MAAOZ,CAAAA,kBAAP,CACH,CACJ,CAVD,IAWK,CACDgB,OAAO,CAACC,KAAR,CAAe;AAC3B;AACA,SAFY,EAGA,MAAOjB,CAAAA,kBAAP,CACH,CACJ,CAlBM,CAkBJ,CAACY,aAAD,CAlBI,CAAP,CAmBH,CACD,QAASM,CAAAA,mBAAT,CAA6BC,cAA7B,CAA6ChB,KAA7C,CAAoDiB,iBAApD,CAAuE,CACnE,KAAMC,CAAAA,SAAS,CAAG,GAAlB,CACA,KAAMC,CAAAA,KAAK,CAAGH,cAAc,CAACI,KAAf,CAAqBF,SAArB,CAAd,CACA,GAAIC,KAAK,CAACE,MAAN,GAAiB,CAArB,CAAwB,CACpB,MAAOF,CAAAA,KAAK,CAAC,CAAD,CAAZ,CACH,CAFD,IAGK,CACD,GAAIA,KAAK,CAACE,MAAN,CAAeJ,iBAAiB,CAACxB,WAAlB,CAA8B4B,MAAjD,CAAyD,CACrDR,OAAO,CAACC,KAAR,CAAe,cAAaG,iBAAiB,CAACnB,MAAO,kBAAiBmB,iBAAiB,CAACxB,WAAlB,CAA8B4B,MAAO,+BAA8BJ,iBAAiB,CAACxB,WAAY,+BAA8B0B,KAAK,CAACE,MAAO,kBAAiBL,cAAe,GAAlP,EACH,CACD,KAAMM,CAAAA,UAAU,CAAGL,iBAAiB,CAAClB,MAAlB,CAAyBC,KAAzB,CAAnB,CACA,KAAMuB,CAAAA,eAAe,CAAGN,iBAAiB,CAACxB,WAAlB,CAA8B+B,OAA9B,CAAsCF,UAAtC,CAAxB,CACA;AACA,MAAOH,CAAAA,KAAK,CAACM,IAAI,CAACC,GAAL,CAASH,eAAT,CAA0BJ,KAAK,CAACE,MAAN,CAAe,CAAzC,CAAD,CAAZ,CACH,CACJ,CACD,QAASlC,CAAAA,aAAT,EAAyB,CACrB,KAAMwC,CAAAA,gBAAgB,CAAGpB,oBAAoB,EAA7C,CACA,MAAO,CACHqB,aAAa,CAAE,CAAC5B,KAAD,CAAQgB,cAAR,GAA2B,CACtC,MAAOD,CAAAA,mBAAmB,CAACC,cAAD,CAAiBhB,KAAjB,CAAwB2B,gBAAxB,CAA1B,CACH,CAHE,CAAP,CAKH,CACD1C,OAAO,CAACE,aAAR,CAAwBA,aAAxB","sourcesContent":["\"use strict\";\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.usePluralForm = void 0;\nconst react_1 = require(\"react\");\nconst useDocusaurusContext_1 = __importDefault(require(\"@docusaurus/useDocusaurusContext\"));\n// We want to ensurer a stable plural form order in all cases\n// It is more convenient and natural to handle \"small values\" first\n// See https://twitter.com/sebastienlorber/status/1366820663261077510\nconst OrderedPluralForms = [\n    'zero',\n    'one',\n    'two',\n    'few',\n    'many',\n    'other',\n];\nfunction sortPluralForms(pluralForms) {\n    return OrderedPluralForms.filter((pf) => pluralForms.includes(pf));\n}\n// Hardcoded english/fallback implementation\nconst EnglishPluralForms = {\n    locale: 'en',\n    pluralForms: sortPluralForms(['one', 'other']),\n    select: (count) => (count === 1 ? 'one' : 'other'),\n};\nfunction createLocalePluralForms(locale) {\n    const pluralRules = new Intl.PluralRules(locale);\n    return {\n        locale,\n        pluralForms: sortPluralForms(pluralRules.resolvedOptions().pluralCategories),\n        select: (count) => pluralRules.select(count),\n    };\n}\n// Poor man's PluralSelector implementation, using an english fallback.\n// We want a lightweight, future-proof and good-enough solution.\n// We don't want a perfect and heavy solution.\n//\n// Docusaurus classic theme has only 2 deeply nested labels requiring complex plural rules\n// We don't want to use Intl + PluralRules polyfills + full ICU syntax (react-intl) just for that.\n//\n// Notes:\n// - 2021: 92+% Browsers support Intl.PluralRules, and support will increase in the future\n// - NodeJS >= 13 has full ICU support by default\n// - In case of \"mismatch\" between SSR and Browser ICU support, React keeps working!\nfunction useLocalePluralForms() {\n    const { i18n: { currentLocale }, } = useDocusaurusContext_1.default();\n    return react_1.useMemo(() => {\n        if (Intl && Intl.PluralRules) {\n            try {\n                return createLocalePluralForms(currentLocale);\n            }\n            catch (e) {\n                console.error(`Failed to use Intl.PluralRules for locale=${currentLocale}.\nDocusaurus will fallback to a default/fallback (English) Intl.PluralRules implementation.\n`);\n                return EnglishPluralForms;\n            }\n        }\n        else {\n            console.error(`Intl.PluralRules not available!\nDocusaurus will fallback to a default/fallback (English) Intl.PluralRules implementation.\n        `);\n            return EnglishPluralForms;\n        }\n    }, [currentLocale]);\n}\nfunction selectPluralMessage(pluralMessages, count, localePluralForms) {\n    const separator = '|';\n    const parts = pluralMessages.split(separator);\n    if (parts.length === 1) {\n        return parts[0];\n    }\n    else {\n        if (parts.length > localePluralForms.pluralForms.length) {\n            console.error(`For locale=${localePluralForms.locale}, a maximum of ${localePluralForms.pluralForms.length} plural forms are expected (${localePluralForms.pluralForms}), but the message contains ${parts.length} plural forms: ${pluralMessages} `);\n        }\n        const pluralForm = localePluralForms.select(count);\n        const pluralFormIndex = localePluralForms.pluralForms.indexOf(pluralForm);\n        // In case of not enough plural form messages, we take the last one (other) instead of returning undefined\n        return parts[Math.min(pluralFormIndex, parts.length - 1)];\n    }\n}\nfunction usePluralForm() {\n    const localePluralForm = useLocalePluralForms();\n    return {\n        selectMessage: (count, pluralMessages) => {\n            return selectPluralMessage(pluralMessages, count, localePluralForm);\n        },\n    };\n}\nexports.usePluralForm = usePluralForm;\n"]}]}